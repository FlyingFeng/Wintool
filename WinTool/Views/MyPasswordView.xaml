<UserControl x:Class="WinTool.Views.MyPasswordView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WinTool.Views"
             xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:model="clr-namespace:WinTool.Models.MyPassword"
             xmlns:myConverters="clr-namespace:WinTool.Converters"
             xmlns:vm="clr-namespace:WinTool.ViewModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <behavior:Interaction.Triggers>
        <behavior:EventTrigger EventName="Loaded">
            <behavior:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </behavior:EventTrigger>
    </behavior:Interaction.Triggers>
    <UserControl.DataContext>
        <vm:MyPasswordViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <x:Array x:Key="Array1" Type="{x:Type sys:Byte}">
            <sys:Byte>4</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>35</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>36</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>37</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>38</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>39</sys:Byte>
            <sys:Byte>0</sys:Byte>
        </x:Array>
        <x:Array x:Key="Array2" Type="{x:Type sys:Byte}">
            <sys:Byte>4</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>35</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>36</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>37</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>38</sys:Byte>
            <sys:Byte>0</sys:Byte>
            <sys:Byte>39</sys:Byte>
            <sys:Byte>0</sys:Byte>
        </x:Array>
        <x:Array x:Key="TempData" Type="{x:Type model:MyPasswordModel}">
            <model:MyPasswordModel Password="{StaticResource Array1}" Name="测试1" CreatedTime="2023-05-01"/>
            <model:MyPasswordModel Password="{StaticResource Array2}" Name="测试2" CreatedTime="2023-05-02"/>
        </x:Array>
        <myConverters:DateTime2StringConverter x:Key="DateTime2StringConverter"/>
        <myConverters:ByteArrayPassword2StringConverter x:Key="ByteArrayPassword2StringConverter"/>
        <!--<Style TargetType="ListBoxItem" x:Key="ListBoxItemStyle">
            <Setter Property="Margin" Value="6"/>
            
        </Style>-->

        <Style TargetType="Button" x:Key="ModifyButtonStyle">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="ToolTip" Value="编辑"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="White" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Path x:Name="shape"  Width="{TemplateBinding Width}" Stretch="Fill" Height="{TemplateBinding Height}" Stroke="#FF569DE5" Data="{StaticResource ModifyPathData}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="shape" Property="Stroke" Value="#8ec0df"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="Button" x:Key="ShowButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="White" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Path x:Name="shape" Width="{TemplateBinding Width}" Stretch="Fill" Height="{TemplateBinding Height}" Stroke="#FF569DE5" Data="{StaticResource ShowPathData}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="shape" Property="Stroke" Value="#8ec0df"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Orange"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <!--<Setter Property="Padding" Value="4,1"/>-->
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Yellow"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Green"/>
                            </MultiTrigger>-->
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>-->
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>-->
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <DataTemplate x:Key="DataTemplate1" DataType="{x:Type model:MyPasswordModel}">
            <Border x:Name="bd" Height="128" Width="256" BorderThickness="1" BorderBrush="White" CornerRadius="6" Background="#FF569DE5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <CheckBox HorizontalAlignment="Right" Margin="0,15,5,0" IsChecked="{Binding IsChecked}"/>
                        <Button HorizontalAlignment="Left" Width="22" Height="22" 
                                Style="{StaticResource ModifyButtonStyle}"
                                CommandParameter="{Binding Id}"
                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl},Path=DataContext.ModifyCommand}"/>
                    </Grid>
                    <TextBlock Grid.Row="1" Text="{Binding CreatedTime,Converter={StaticResource DateTime2StringConverter}}"
                               HorizontalAlignment="Center" 
                               VerticalAlignment="Center"/>
                    <Grid HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center">
                        <TextBox Text="{Binding Password,Converter={StaticResource ByteArrayPassword2StringConverter}}"
                                 Height="32"
                                 VerticalContentAlignment="Center"
                                 Width="200"/>
                        <TextBox x:Name="mask" Text="{Binding MaskPassword}" Width="200" Height="32"
                                 IsReadOnly="True"
                                 VerticalContentAlignment="Center"/>
                        <Button x:Name="check"  HorizontalAlignment="Right" Width="32" Height="20" Style="{StaticResource ShowButtonStyle}" VerticalAlignment="Center" Margin="0,0,5,0">
                        </Button>
                    </Grid>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <Trigger SourceName="check" Property="Button.IsPressed" Value="true">
                    <Setter TargetName="mask" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                    <Setter TargetName="bd" Property="BorderBrush" Value="#8ec0df"/>
                    <Setter TargetName="bd" Property="BorderThickness" Value="2"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
     
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="64"/>
            <RowDefinition Height="2"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Background="AliceBlue">
            <Rectangle Width="12"/>
            <TextBlock Text="名称：" VerticalAlignment="Center" FontSize="16"/>
            <TextBox Width="180" Height="32" Text="{Binding SearchName}" VerticalContentAlignment="Center"/>
            <Rectangle Width="12"/>
            <Button Content="查找" Width="110" Height="32" Command="{Binding SearchCommand}"/>
            <Rectangle Width="12"/>
            <Button Content="添加" Width="110" Height="32" Command="{Binding AddCommand}"/>
            <Rectangle Width="12"/>
            <Button Content="移除选中" Width="110" Height="32" Command="{Binding RemoveCommand}"/>
        </StackPanel>

        <ListBox Grid.Row="2" ItemTemplate="{StaticResource DataTemplate1}"
                 ItemContainerStyle="{StaticResource ListBoxItemStyle}"
                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                 ItemsSource="{Binding SourceData}"
                 d:ItemsSource="{StaticResource TempData}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
    </Grid>
</UserControl>
